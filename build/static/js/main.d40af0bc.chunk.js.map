{"version":3,"sources":["routes/Login.js","index.js"],"names":["Login","getToken","history","useHistory","useState","userName","password","userData","setUserData","submitError","error","setError","submitForm","fetch","method","headers","body","JSON","stringify","user","username","then","response","json","result","success","localStorage","setItem","data","token","push","errorMessage","message","console","log","catch","className","required","onChange","e","target","value","type","id","placeholder","onClick","formError","valid","length","to","App","path","ReactDOM","render","document","getElementById"],"mappings":"mPAiGeA,EA7FD,SAAC,GAAe,EAAdC,SAAe,IAEzBC,EAAUC,cAFc,EAGMC,mBAAS,CACrCC,SAAU,GACVC,SAAU,KALY,mBAGnBC,EAHmB,KAGTC,EAHS,OAOAJ,mBAAS,CAC/BC,UAAU,EACVC,UAAU,EACVG,aAAa,IAVS,mBAOnBC,EAPmB,KAOZC,EAPY,KAgCpBC,EAAa,WACfC,MAAM,4EAA6E,CAC/EC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAM,CACNC,SAAUb,EAASF,SACnBC,SAAUC,EAASD,cAGpBe,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACF,GAAIA,EAAOC,QAGP,OADAC,aAAaC,QAAQ,QAASH,EAAOI,KAAKC,OACnC3B,EAAQ4B,KAAK,YAGpBnB,EAAS,2BAAID,GAAL,IAAYD,aAAa,EAAMsB,aAAcP,EAAOd,MAAMsB,WAEtEC,QAAQC,IAAIV,MAEfW,MAAMF,QAAQvB,QAGvB,OACE,yBAAK0B,UAAU,OACf,6BAEI,sCACD,2CACC,2BAAOC,UAAQ,EACVC,SAAU,SAACC,GACP/B,EAAY,2BAAKD,GAAN,IAAgBF,SAASkC,EAAEC,OAAOC,UAEjDC,KAAK,OACLC,GAAG,WACHC,YAAY,cACZH,MAAOlC,EAASF,WAAW,6BAC1BK,EAAML,SAAW,8BAAgC,KAAK,6BAC3D,2CACA,2BAAOgC,UAAQ,EACXC,SAAU,SAACC,GACR/B,EAAY,2BAAKD,GAAN,IAAgBD,SAASiC,EAAEC,OAAOC,UAEjDC,KAAK,WACLC,GAAG,WACHC,YAAY,cACZH,MAAOlC,EAASD,WAAW,6BAC1BI,EAAMJ,SAAW,8BAAgC,KAAK,6BACtDI,EAAMD,YAAcC,EAAMqB,aAAe,KAAK,6BAEvD,4BAAQc,QAxEW,WACjB,IAAIC,EAAY,GACZC,GAAQ,EAEPxC,EAASF,SAAU2C,OAAS,IAC7BD,GAAM,EACND,EAAU,2BAAIA,GAAL,IAAgBzC,UAAU,KAElCE,EAASD,SAAU0C,OAAS,IAC7BD,GAAM,EACND,EAAU,2BAAIA,GAAL,IAAgBxC,UAAU,KAEvCK,EAASmC,GACLC,GACAnC,MA0DN,UACA,qDAA0B,kBAAC,IAAD,CAAMqC,GAAG,aAAT,eClE1BC,EAAM,WACV,OAAO,yBAAKP,GAAG,OACb,6BACE,kBAAC,IAAD,CAAMM,GAAG,SAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,8BACA,kBAAC,IAAD,CAAOE,KAAK,WACR,uCAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,qCAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,sCAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,sCAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,yCAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,yCAKJ,kBAAC,EAAD,QAKJC,IAASC,OACP,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,U","file":"static/js/main.d40af0bc.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\n\r\n\r\nconst Login = ({getToken}) => {\r\n\r\n  let history = useHistory();\r\n    const [userData, setUserData] = useState({\r\n        userName: \"\",\r\n        password: \"\"\r\n    })\r\n    const [error, setError] = useState({\r\n        userName: false,\r\n        password: false,\r\n        submitError: false\r\n    })\r\n\r\n   \r\n    const validateForm = () => {\r\n        let formError = {};\r\n        let valid = true;\r\n\r\n        if ((userData.userName).length < 3) {\r\n            valid=false;\r\n            formError={...formError, userName: true}\r\n        } \r\n        if ((userData.password).length < 3) {\r\n            valid=false;\r\n            formError={...formError, password: true}\r\n        } \r\n        setError(formError)\r\n        if (valid) {\r\n            submitForm()\r\n        }\r\n    }\r\n\r\n    const submitForm = () => {\r\n        fetch(`https://strangers-things.herokuapp.com/api/2010-UNF-HY-WEB-PT/users/login`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                user: {\r\n                username: userData.userName,\r\n                password: userData.password\r\n                }\r\n            })\r\n            }).then(response => response.json())\r\n            .then(result => {\r\n                if (result.success) {\r\n                    // getToken(result.data.token);\r\n                    localStorage.setItem('token', result.data.token);\r\n                    return history.push('/profile');\r\n                }\r\n                else {\r\n                    setError({...error, submitError: true, errorMessage: result.error.message})\r\n                }\r\n                console.log(result);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    return (\r\n      <div className=\"log\">\r\n      <div>\r\n      {/* <form> */}\r\n          <h1>Log in</h1>\r\n         <label>Username</label>\r\n          <input required\r\n               onChange={(e) => {\r\n                   setUserData({ ...userData, userName:e.target.value })\r\n               }}\r\n               type=\"text\"\r\n               id=\"keywords\"\r\n               placeholder=\"Username...\"\r\n               value={userData.userName}/><br/>\r\n               {error.userName ? \"Please enter valid username\" : null}<br/>\r\n           <label>Password</label>\r\n           <input required\r\n               onChange={(e) => {\r\n                  setUserData({ ...userData, password:e.target.value })\r\n              }}\r\n              type=\"password\"\r\n              id=\"keywords\"\r\n              placeholder=\"Password...\"\r\n              value={userData.password}/><br/>\r\n              {error.password ? \"Please enter valid password\" : null}<br/>\r\n              {error.submitError ? error.errorMessage : null}<br/>\r\n        {/* </form> */}\r\n      <button onClick={validateForm}>Log In</button>\r\n      <p>Don't have an account? <Link to=\"/register\">Sign Up</Link></p>\r\n      </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n/* <nav>\r\n<Link to=\"/login\">Login</Link>\r\n</nav>\r\n<main>\r\n<Route path=\"/Login\">\r\n  <h1>Username:</h1>\r\n</Route>\r\n</main> */\r\n","\nimport React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport Login from './routes/Login';\nimport Header from './components/Header';\nimport Register from './routes/Register';\nimport Profile from './routes/Profile';\nimport Posts from './routes/Posts';\nimport AddPost from './routes/Create'\n\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n\n// import {\n//   Home,\n//   //Login,\n//   //Forms,\n// } from './components';\n\nconst App = () => {\n  return <div id=\"app\">\n    <nav>\n      <Link to=\"/Home\">Home</Link>\n      <Link to=\"/about\">Posts</Link>\n      <Link to=\"/login\">Login</Link>\n      <Link to=\"/Register\">Register</Link>\n    </nav>\n    <main>\n    <Route path=\"/Header\">\n        <h1>Header</h1>\n      </Route>\n      <Route path=\"/home\">\n        <h1>Home</h1>\n      </Route>\n      <Route path=\"/Posts\">\n        <h1>Posts</h1>\n      </Route>\n      <Route path=\"/Login\">\n        <h1>Login</h1>\n      </Route>\n      <Route path=\"/Register\">\n        <h1>Register</h1>\n      </Route>\n      <Route path=\"/Create\">\n        <h1>AddPost</h1>\n      </Route>\n    </main>\n    \n   \n    <Login/>\n\n   </div>\n}\n\nReactDOM.render(\n  <Router>\n  <App />\n  </Router>,\n  document.getElementById('app')\n);\n\n\n// {/* <Login/> */}\n\n//Komal is cool"],"sourceRoot":""}